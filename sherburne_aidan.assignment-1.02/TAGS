
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2893
static void heap_link(158,2969
static void heap_consolidate(172,3291
void *heap_remove_min(heap_remove_min213,4224
int heap_combine(248,4758
static void heap_cut(277,5409
static void heap_cascading_cut(291,5690
int heap_decrease_key(305,5916
int heap_decrease_key_no_replace(319,6158
int32_t compare(343,6732
char *print_int(print_int348,6831
int main(357,6949

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,2388
# define rand_under(16,339
# define rand_range(20,482
# define UNUSED(21,555
#define malloc(23,586
typedef struct corridor_path 29,722
  heap_node_t *hn;hn30,753
  uint8_t pos[pos31,772
  uint8_t from[from32,790
  int32_t cost;33,809
} corridor_path_t;34,825
typedef enum dim 36,845
  dim_x,37,864
  dim_y,38,873
  num_dims39,882
} dim_t;40,893
typedef uint8_t pair_t[pair_t42,903
#define DUNGEON_X 44,938
#define DUNGEON_Y 45,972
#define MIN_ROOMS 46,1006
#define MAX_ROOMS 47,1039
#define ROOM_MIN_X 48,1073
#define ROOM_MIN_Y 49,1106
#define ROOM_MAX_X 50,1139
#define ROOM_MAX_Y 51,1173
#define mappair(53,1208
#define mapxy(54,1265
#define hardnesspair(55,1300
#define hardnessxy(56,1367
typedef enum __attribute__ ((__packed__)) terrain_type 58,1413
  ter_debug,59,1470
  ter_wall,60,1483
  ter_wall_immutable,61,1495
  ter_floor,62,1517
  ter_floor_room,63,1530
  ter_floor_hall,64,1548
  ter_stairs,65,1566
  ter_stairs_up,66,1580
  ter_stairs_down,67,1597
  ter_player68,1616
} terrain_type_t;69,1629
typedef struct room 71,1648
  pair_t position;72,1670
  pair_t size;73,1689
} room_t;74,1704
typedef struct dungeon 76,1715
  uint32_t num_rooms;77,1740
  room_t rooms[rooms78,1762
  terrain_type_t map[map79,1789
  uint8_t hardness[hardness88,2442
  pair_t player_pos;89,2484
  uint32_t version;90,2505
  uint32_t filesize;91,2525
} dungeon_t;92,2546
static uint32_t in_room(94,2560
static uint32_t adjacent_to_room(110,2951
static uint32_t is_open_space(118,3212
static int32_t corridor_path_cmp(123,3311
static void dijkstra_corridor(127,3461
static void dijkstra_corridor_inv(226,7198
#define hardnesspair_inv(279,8520
static int connect_two_rooms(329,11191
static int create_cycle(348,11843
static int connect_rooms(390,13408
int gaussian[gaussian403,13601
typedef struct queue_node 411,13757
  int x,412,13785
  int x, y;412,13785
  struct queue_node *next;next413,13797
} queue_node_t;414,13824
static int smooth_hardness(416,13841
static int empty_dungeon(570,18015
static int place_rooms(589,18391
static void place_stairs(626,19578
static int make_rooms(648,20213
int place_player(673,20818
int gen_dungeon(688,21075
void render_dungeon(702,21265
void delete_dungeon(741,22076
void init_dungeon(745,22115
int save_dungeon(751,22190
int load_dungeon(847,24550
int main(947,27315
